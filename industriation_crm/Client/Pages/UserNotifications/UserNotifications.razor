@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="modal" tabindex="-1" style="display:block" role="dialog">
    <div class="modal-notification modal-xl modal-dialog-scrollable">
        <div class="modal-notification-content">
            <div class="modal-header">
                <div class="container">
                    <div class="row-f ind-col-lg-10">
                        <div class="main-title ind-col-lg-3">Уведомления</div>
                        <div class="ind-col-lg-7 row-f">
                            <div class="ind-col-lg-1 a-i-c">
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть" @onclick="CloseModal"></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="button-bar mb-20">
                    <button @onclick="()=>ViewTasks = false" class="score">Уведомления</button>
                    <button @onclick="()=>ViewTasks = true" class="score">Задачи</button>
                </div>
                @if (ViewTasks == false)
                {
                        @foreach (var n in user_Notifications!)
                        {
                        <div class="modal-actual-task">
                            <div class="order-info-date">
                                @n.date
                            </div>
                            @n.text
                        </div>
                        }
                }
                else
                {

                    @foreach (var t in user_tasks!)
                    {
                        @if (t.complete == 1)
                        {
                            <div class="modal-done-task">
                                <div class="order-info-date">
                                    @t.date
                                </div>
                                <div>
                                    <b>Заказ:</b> @t.order_id
                                </div>
                                <div>
                                    <b>От кого:</b> @t.order_id
                                </div>
                                <div>
                                    <b>Текст:</b> @t.text
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="modal-actual-task">
                                <div class="order-info-date">
                                    @t.date
                                </div>
                                <div>
                                    <b>Заказ:</b> @t.order_id
                                </div>
                                <div>
                                    <b>От кого:</b> @t.order_id
                                </div>
                                <div>
                                    <b>Текст:</b> @t.text
                                </div>
                            </div>
                        }
                    }
                }

            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public Action? CloseModal { get; set; }
    protected List<user_notifications>? user_Notifications { get; set; } = new();
    protected List<task>? user_tasks { get; set; } = new();
    protected bool ViewTasks = false;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        int userId = authState.User.Claims.Where(_ => _.Type == "userid").Select(_ => Convert.ToInt32(_.Value)).First();
        user_Notifications = await Http.GetFromJsonAsync<List<user_notifications>>("api/usernotifications/" + userId);
        user_tasks = await Http.GetFromJsonAsync<List<task>>("api/Task/" + userId);
    }
}
