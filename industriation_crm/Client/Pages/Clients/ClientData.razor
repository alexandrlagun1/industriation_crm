@using System.Security.Claims;
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@using industriation_crm.NumberMask

<div class="row-f">
    <div class="ind-col-lg-4">
        <div class="main-section ind-col-lg-10">
            <div class="main-section-label">Данные</div>
            <div class="section-field">
                <div class="ind-col-lg-10 ind-col-md-10">
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Оборот клиента</div>
                        @client_Orders.Where(o=>o.pay_status_id == 2).Select(o=>o._price_summ).Sum() ₽
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Скидка</div>
                        @client_discount %
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">До повышения скидки</div>
                        @next_lvl_discount
                    </div>
                </div>
            </div>
        </div>
        <div class="main-section ind-col-lg-10">
            <div class="main-section-label">Клиент</div>
            <div class="section-field">
                <div class="ind-col-lg-10 ind-col-md-10">
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Фамилия</div>
                        @main_contact?.surname
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Имя</div>
                        @main_contact?.name
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Отчество</div>
                        @main_contact?.patronymic
                    </div>
                </div>
                <div class="ind-col-lg-10 ind-col-md-10">
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">E-mail</div>
                        @main_contact?.email
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Телефон</div>
                        @main_contact?.phone <button type="button" @onclick="()=>CallToClient(main_contact?.phone)">Звонок</button>
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Тэг</div>
                        @client.tag
                    </div>
                </div>
            </div>
        </div>
        @if (client?.client_type == 1)
        {
            <div class="main-section ind-col-lg-10">
                <div class="main-section-label">Данные по юридическому лицу</div>
                <div class="section-field">
                    <div class="ind-col-lg-10 ind-col-md-10">
                        <div class="ind-col-lg-10 input-field">
                            <div class="input-label">Полное наименование</div>
                            @client.org_name
                        </div>
                        <div class="ind-col-lg-10 input-field">
                            <div class="input-label">Адрес регистрации</div>
                            @client.org_address
                        </div>
                    </div>
                    <div class="ind-col-lg-10 ind-col-md-10">
                        <div class="ind-col-lg-10 input-field">
                            <div class="input-label">ИНН</div>
                            @client.org_inn

                        </div>
                        <div class="ind-col-lg-10 input-field">
                            <div class="input-label">ОГРН</div>
                            @client.org_ogrn
                        </div>
                    </div>
                    <div class="ind-col-lg-10 ind-col-md-10">
                        <div class="ind-col-lg-10 input-field">
                            <div class="input-label">КПП</div>
                            @client.org_kpp
                        </div>
                    </div>
                </div>
            </div>

        }
        <div class="main-section ind-col-lg-10">
            <div class="main-section-label">Банковские реквизиты</div>
            <div class="section-field">
                <div class="ind-col-lg-10 ind-col-md-10">
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">БИК</div>
                        @client.bank_bik
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Наименование банка</div>
                        @client.bank_name
                    </div>
                </div>
                <div class="ind-col-lg-10 ind-col-md-10">
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Корреспондентский счет</div>
                        @client.bank_cor_schet
                    </div>
                    <div class="ind-col-lg-10 input-field">
                        <div class="input-label">Расчетный счет</div>
                        @client.bank_ras_schet
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="ind-col-lg-6 pl-10" onmousemove="tabsSection()">
        <div class="main-section ind-col-10">
            <div class="nav-buttons">
                <button type="button" class="tab tab-active">Задачи</button>
                <button type="button" class="tab">Заказы</button>
                <button type="button" class="tab">Звонки</button>
            </div>
            <div class="tab-section tab-section-active main-section ind-col-lg-10">
                <div class="main-section-label">Задачи:</div>
                <button @onclick="openCreatetaskModal" type="button" class="save task-create">Создать задачу</button>
                @if (viewCreateTask)
                {
                    <div class="modal" tabindex="-1" style="display:block" role="dialog">
                        <div class="modal-dialog modal-xl modal-dialog-scrollable ind-col-lg-7 ind-col-md-8">
                            <div class="modal-content b-s">
                                <div class="modal-body">
                                    Исполнитель:
                                    <select @bind="newTask.executor_id">
                                        @foreach (var e in executors)
                                        {
                                            <option value="@e.id">@e.name</option>
                                        }
                                    </select>
                                    <br>
                                    Задача:
                                    <br>
                                    <textarea @bind="newTask.text" class="notes-textarea main-input" placeholder="Введите текст задачи"></textarea>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="close" data-dismiss="modal" @onclick="()=>viewCreateTask = false">Закрыть</button>
                                    <button type="button" class="score" @onclick="createTask">Создать</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="mh-500">
                    <b>Актуальные задачи:</b>
                    @foreach (var task in tasks?.Where(t => t.complete == 0)!.OrderByDescending(ut => ut.date))
                    {
                        <div class="actual-task mt-10">
                            <div><b>От кого:</b> @task?.creator?.name</div>
                            <div><b>Исполнитель:</b> @task?.executor?.name</div>
                            <div><b>Задача:</b> @task?.text</div>
                            <button @onclick="()=>CompleteTask(task)" class="score task-btn">Выполнить</button>
                        </div>
                    }
                </div>
                <hr>
                <div class="mh-500">
                    <b>Завершенные задачи:</b>
                    @foreach (var task in tasks?.Where(t => t.complete == 1)!.OrderByDescending(ut => ut.date))
                    {
                        <div class="done-task mt-10">
                            <div><b>От кого:</b> @task?.creator?.name</div>
                            <div><b>Исполнитель:</b> @task?.executor?.name</div>
                            <div><b>Задача:</b> @task?.text</div>
                        </div>
                    }
                </div>
            </div>
            <div class="tab-section main-section ind-col-lg-10">
                <div class="main-section-label">Заказы</div>
                <div class="section-field mh-500">
                    Статус оплаты заказа:
                    <select @bind="order_pay_status">
                        <option value="0">Все</option>
                        <option value="1">Частично оплаченые</option>
                        <option value="2">Оплаченые</option>
                        <option value="3">Постоплаченые</option>
                        <option value="4">Не оплаченые</option>
                    </select>
                    @foreach (var o in _client_Orders!)
                    {
                        <div class="client-order ind-col-lg-10">
                            <a href='/order/edit/@o.id' role="button"> Заказ @o?.id (@o.pay_status?.name)</a>
                            @if (o?._current_check != null)
                            {
                                @foreach (var p in o?._current_check?.product_To_Orders)
                                {
                                    <div class="client-order-item">
                                        <div class="item-name">
                                            <div class="name">@p.product?.name </div>
                                            <div class="model"> Артикул: <b>@p.product?.article</b></div>
                                        </div>
                                        <div class="item-price">
                                            <div class="count"> Колличество: <b>@p.count @p.product?.unit</b> </div>
                                            <div class="price"> Цена: <b>@p._product_price_with_discount.Value.ToString("N", NumberMask.GetNi()) @o._current_check.currency за 1шт.</b> </div>
                                            <div class="summ"> Сумма: <b>@p._total_price.Value.ToString("N", NumberMask.GetNi()) @o._current_check.currency</b> </div>
                                            <div>Срок поставки: <b>@p.from_delivery_period-@p.to_delivery_period @p.delivery_period_type?.name</b></div>
                                        </div>
                                    </div>

                                }
                                    <div>
                                        Оплаты:
                                        @if (o.order_Pays != null)
                                        {
                                            @foreach (var p in o.order_Pays)
                                            {
                                                <div>
                                                   Дата: <b>@p.date</b>
                                                </div>
                                                <div>
                                                Сумма: <b>@p?.price?.ToString("N", NumberMask.GetNi()) @o?._current_check?.currency</b>
                                                </div>
                                            }
                                        }
                                    </div>
                                    
                            }

                        </div>
                    }
                </div>
            </div>
            <div class="tab-section main-section ind-col-lg-10">
                <div class="main-section-label">Звонки</div>
                <div class="section-field">
                    @foreach (var call in call_Histories!)
                    {
                        <div class="client-call ind-col-lg-10">
                            <div class="button">
                                @if (call.isActive)
                                {
                                    <video controls autoplay>
                                        <source src="@call.record" type="audio/mp3">
                                    </video>
                                }
                                @if (call.record != null)
                                {
                                    @if (call.isActive)
                                    {
                                        <button class="play-btn" @onclick="()=>call.isActive=false">
                                            <img src="./icons/close.svg">
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="play-btn" @onclick="()=>call.isActive=true">
                                            <img src="./icons/play_icon.svg">
                                        </button>
                                    }
                                    <a class="download-btn" href="@call.record" target="_blank">
                                        <img src="./icons/download.svg">
                                    </a>
                                }
                                else
                                {
                                    <div>---</div>
                                }
                            </div>
                            <div class="duration">Продолжительность звонка: @call.duration</div>
                            <div class="type">
                                <b>
                                    @if (call.type?.ToLower() == "in")
                                    {
                                        <div>Входящий</div>
                                    }
                                    else if (call.type?.ToLower() == "out")
                                    {
                                        <div>Исходящий</div>
                                    }
                                </b>
                            </div>
                            <div class="full-name">Full name</div>
                            <div class="phone">@call.client_number</div>
                            <div class="date">@call.date_time</div>
                        </div>
                    }
                </div>
            </div>
        </div>

    </div>

</div>
@code {
    [Parameter]
    public client? client { get; set; }
    [Parameter]
    public progress_client_discount? progress_client_discount { get; set; }
    [Parameter]
    public int client_discount { get; set; }
    [Parameter]
    public string next_lvl_discount { get; set; }
    protected int order_pay_status { get; set; } = 0;
    protected contact? main_contact { get; set; }
    [Parameter]
    public List<order>? client_Orders { get; set; }
    protected List<order>? _client_Orders
    {
        get
        {
            if (order_pay_status == 0)
                return client_Orders;
            else
                return client_Orders.Where(o => o.pay_status_id == order_pay_status).ToList();
        }
    }

    protected List<task>? tasks { get; set; } = new();
    protected List<user> executors = new();
    protected List<call_history> call_Histories = new();

    protected task? newTask { get; set; } = new();
    protected bool viewCreateTask = false;

    protected int? user_id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user_id = authState.User.Claims.Where(_ => _.Type == ClaimTypes.NameIdentifier).Select(_ => Convert.ToInt32(_.Value)).First();


        tasks = await Http.GetFromJsonAsync<List<task>>($"api/Task/GetTasksByClientId/{client.id}");
        executors = await Http.GetFromJsonAsync<List<user>>("api/User?type=all");

        if (client?.contacts != null)
        {
            var answer = await Http.PostAsJsonAsync("api/CallHistory/GetCallHistoryByClientId", client?.contacts?.Select(c => c.id).ToList());
            call_Histories = await answer.Content.ReadFromJsonAsync<List<call_history>>();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        main_contact = client?.contacts?.Where(c => c.main_contact == 1).FirstOrDefault();

    }
    protected async Task CallToClient(string phone)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user_id = authState.User.Claims.Where(_ => _.Type == ClaimTypes.NameIdentifier).Select(_ => Convert.ToInt32(_.Value)).First();
        await Http.GetAsync($"api/Megafon?user_id={user_id}&phone={phone}");
    }
    protected void openCreatetaskModal()
    {
        newTask = new();
        newTask.executor_id = executors.FirstOrDefault()?.id;
        viewCreateTask = true;
    }
    protected void CompleteTask(task task)
    {
        task.complete = 1;
        Http.PutAsJsonAsync("api/Task", task);
    }
    protected async Task createTask()
    {
        viewCreateTask = false;
        newTask.complete = 0;
        newTask.creator_id = user_id;
        newTask.client_id = client?.id;
        var answer = await Http.PostAsJsonAsync("api/Task", newTask);
        newTask.id = await answer.Content.ReadFromJsonAsync<int>();
        newTask.executor = executors.Where(e => e.id == newTask.executor_id).First();
        newTask.creator = executors.Where(e => e.id == user_id).First();
        tasks.Add(newTask);


    }
}
