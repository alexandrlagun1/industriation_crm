@using industriation_crm.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager



<div class="modal" tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog modal-xl modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">

                <div class="container">
                    <div class="row">
                        <div class="col-sm">
                            <h4 class="modal-title">Добавление товаров</h4>
                        </div>
                        <div class="col-sm">
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" placeholder="Артикул, название" aria-label="Recipient's username" aria-describedby="basic-addon2">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button"><i class="oi oi-magnifying-glass"></i></button>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm">
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" placeholder="Производитель" aria-label="Recipient's username" aria-describedby="basic-addon2">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button"><i class="oi oi-magnifying-glass"></i></button>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть" @onclick="CloseModal"></button>
                    </div>
                </div>
            </div>
            <div class="modal-body row">
                <table class="table table-striped align-middle table-bordered">
                    <thead class="table-success">
                        <tr>
                            <th>ID</th>
                            <th>Наименование</th>
                            <th>Колличество</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var productPackage in productPackages)
                        {
                            <tr>
                                <td>@productPackage.product.id</td>
                                <td>@productPackage.product.name</td>
                                <td><input @bind-value="productPackage.count"></input></td>
                                <td>
                                    <button class="btn btn-primary" @onclick="()=>AddProduct(productPackage)">
                                        Добавить
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
    </div>

</div>

@code {
    [Parameter]
    public int orderId { get; set; }
    [Parameter] 
    public Action CloseModal { get; set; }
    [Parameter]
    public Action<product_to_order> AddProductToproductToOrder { get; set; }


    private void InvokeCloseModal()
    {
        CloseModal?.Invoke();
    }
    protected bool OpenModal = false;
    protected List<product> productList = new();
    protected List<ProductPackage> productPackages = new();
    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }
    protected async Task GetProducts()
    {
        productList = await Http.GetFromJsonAsync<List<product>>("api/Product");
        foreach (var p in productList)
        {
            ProductPackage productPackage = new ProductPackage();
            productPackage.product = p;
            productPackages.Add(productPackage);
        }
    }

    protected async Task AddProduct(ProductPackage productPackage)
    {
        product_to_order product_To_Order = new product_to_order();
        product_To_Order.product_id = productPackage.product.id;
        product_To_Order.order_id = orderId;
        product_To_Order.count = productPackage.count;

        var response = await Http.PostAsJsonAsync("api/ProductToOrder", product_To_Order);
        product_To_Order = response.Content.ReadFromJsonAsync<product_to_order>().Result;
        product_To_Order.product = productPackage.product;
        AddProductToproductToOrder?.Invoke(product_To_Order);
    }
    protected class ProductPackage
    {
        public int count = 0;
        public product product { get; set; }
    }
}
