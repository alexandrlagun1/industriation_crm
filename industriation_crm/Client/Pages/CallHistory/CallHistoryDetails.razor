@page "/fetchcallhistorydetails"
@using Newtonsoft.Json
@using System.Security.Claims;
@using industriation_crm.Shared.FilterModels
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
<div class="main-title">Звонки</div>

@if (openSelectClient)
{
    <industriation_crm.Client.Pages.Clients.ClientDetails contact_number="@contactNumber"></industriation_crm.Client.Pages.Clients.ClientDetails>
}
@if (view_filter_settings)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog modal-xl modal-dialog-scrollable filters-modal ind-col-lg-7 ind-col-md-8">
            <div class="modal-content b-s filters-modal-body">
                <div class="modal-header">
                    <div class="container">
                        <div class="row-f ind-col-lg-10">
                            <div class="main-title ind-col-lg-9">Настройка фильтра</div>
                            <div class="ind-col-lg-1 row-f">
                                <div class="ind-col-lg-1 a-i-c">
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть" @onclick="CloseFilterSettings"></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="checkbox-list">
                        <div>
                            <input id="managers_view" type="checkbox" @bind="callHistoryFilter.filterView.managers_view">
                            <label for="managers_view">
                                Менеджеры
                            </label>
                        </div>
                        <div>
                            <input id="type_view" type="checkbox" @bind="callHistoryFilter.filterView.type_view">
                            <label for="type_view">
                                Тип звонка
                            </label>
                        </div>
                        <div>
                            <input id="phone_view" type="checkbox" @bind="callHistoryFilter.filterView.phone_view">
                            <label for="phone_view">
                                Телефон
                            </label>
                        </div>
                        <div>
                            <input id="call_date_from_view" type="checkbox" @bind="callHistoryFilter.filterView.call_date_from_view">
                            <label for="call_date_from_view">
                                Дата звонков от
                            </label>
                        </div>
                        <div>
                            <input id="call_date_to_view" type="checkbox" @bind="callHistoryFilter.filterView.call_date_to_view">
                            <label for="call_date_to_view">
                                Дата звонков до
                            </label>
                        </div>
                    </div>
                    <br />

                </div>
            </div>
        </div>
    </div>
}
<div class="main-section">
    <div class="main-section-label">
        Фильтр:
    </div>
    @if (callHistoryFilter.filterView.managers_view)
    {
        <row-f>
            <div class="custom-select mr-20" onmouseover="customScroll()">
                <input class="custom-input" contenteditable="true" @bind="manager_search" @bind:event="oninput" @onkeydown="SearchEnter">
                </input>
                @foreach (var m in noSelectManagers!.Where(m => m.name.Contains(manager_search)))
                {
                    <button @onclick="()=>{noSelectManagers!.Remove(m); SelectManagers.Add(m);}">
                        <div class="name">@m.name</div>
                    </button>
                }
            </div>
            <div class="manager-field">
                @foreach (var m in SelectManagers)
                {
                    <button @onclick="()=>{SelectManagers.Remove(m); noSelectManagers!.Add(m);}">
                        <div class="name">@m.name</div>
                        <img src="./icons/delete-icon.svg" />
                    </button>
                }
            </div>
        </row-f>
    }
    <div class="section-field ind-col-lg-10">
        @if (callHistoryFilter.filterView.type_view)
        {
            <div class="ind-col-lg-5 input-field ind-col-md-10">
                <div class="input-label ind-col-lg-5">
                    Тип:
                </div>
                <select name="" id="" class="main-input ind-col-lg-5" @bind="callHistoryFilter.type">
                    <option value="">Любые</option>
                    <option value="in">Входящие</option>
                    <option value="out">Исходящие</option>
                </select>
            </div>
        }
        @if (callHistoryFilter.filterView.phone_view)
        {
            <div class="ind-col-lg-5 input-field ind-col-md-10">
                <div class="input-label ind-col-lg-5">
                    Телефон клиента:
                </div>
                <input type="text" class="main-input ind-col-lg-5" @bind="callHistoryFilter.phone" @bind:event="oninput" @onkeydown="SearchEnter">
            </div>
        }
    </div>
    <div class="section-field ind-col-lg-10">
        @if (callHistoryFilter.filterView.call_date_from_view)
        {
            <div class="ind-col-lg-5 input-field ind-col-md-10">
                <div class="input-label ind-col-lg-5">
                    Дата звонка от:
                </div>
                <input type="date" @bind="callHistoryFilter.call_date_from" class="main-input ind-col-lg-5" @bind:event="oninput" @onkeydown="SearchEnter"></input>
            </div>
        }
        @if (callHistoryFilter.filterView.call_date_to_view)
        {
            <div class="ind-col-lg-5 input-field ind-col-md-10">
                <div class="input-label ind-col-lg-5">
                    Дата звонка до:
                </div>
                <input type="date" @bind="callHistoryFilter.call_date_to" class="main-input ind-col-lg-5" @bind:event="oninput" @onkeydown="SearchEnter"></input>
            </div>
        }
    </div>
    <button @onclick="Search" class="score mb-20 mt-20">Поиск</button>
    <button @onclick="ClearFilter" class="close">X</button>
    <button @onclick="()=>view_filter_settings = true" class="mt-20 mb-20 setting-btn">
        <i class="fa fa-cogs" aria-hidden="true"></i>
    </button>
    <div class="section-field">

        <table class="order-table ind-col-lg-10">
            <thead class="ind-col-lg-10">
                <tr class="order-row ind-col-lg-10">
                    <td class="ind-col-lg-1">Дата и время</td>
                    <td class="ind-col-lg-2">Менеджер</td>
                    <td class="ind-col-lg-1">Телефон</td>
                    <td class="ind-col-lg-2">Клиент</td>
                    <td class="ind-col-lg-1">Тип</td>
                    <td class="ind-col-lg-1">Результат</td>
                    <td class="ind-col-lg-1">Длительность</td>
                    <td class="ind-col-lg-1">Запись</td>
                </tr>
            </thead>
            <tbody class="ind-col-lg-10">
                @foreach (var call in call_Histories!)
                {
                    <tr class="order-row ind-col-lg-10">
                        <td class="ind-col-lg-1">@call.date_time</td>
                        <td class="ind-col-lg-2">
                            @call.user?.name
                        </td>
                        <td class="ind-col-lg-1">@call.client_number</td>
                        <td class="ind-col-lg-2">
                            @if (call.contact != null)
                            {
                                <a href="/client/edit/@call.contact?.client_id">
                                    @call.contact?.full_name
                                </a>
                            }
                            else
                            {
                                <a href="/client/add/@call.client_number">
                                    Создать клиента
                                </a>
                                <button class="save ml-10" @onclick="()=>OpenSelectClient(call?.client_number)">Выбрать существующего</button>
                            }
                        </td>
                        <td class="ind-col-lg-1">
                            @if (call.type?.ToLower() == "in")
                            {
                                <div>Входящий</div>
                            }
                            else if (call.type?.ToLower() == "out")
                            {
                                <div>Исходящий</div>
                            }
                        </td>
                        <td class="ind-col-lg-1">
                            @if (call.status?.ToLower() == "success")
                            {
                                <div>Принят</div>
                            }
                            else if (call.status?.ToLower() == "missed")
                            {
                                <div>Не отвечено</div>
                            }
                            else if (call.status?.ToLower() == "noanswer")
                            {
                                <div>Занято</div>
                            }
                            else
                            {
                                <div>Ошибка</div>
                            }
                        </td>
                        <td class="ind-col-lg-1">@call.duration</td>
                        <td class="ind-col-lg-1">
                            @if (call.isActive)
                            {
                                <video controls autoplay>
                                    <source src="@call.record" type="audio/mp3">
                                </video>
                            }
                            @if (call.record != null)
                            {
                                @if (call.isActive)
                                {
                                    <button class="play-btn" @onclick="()=>call.isActive=false">
                                        <img src="./icons/close.svg">
                                    </button>
                                }
                                else
                                {
                                    <button class="play-btn" @onclick="()=>call.isActive=true">
                                        <img src="./icons/play_icon.svg">
                                    </button>
                                }
                                <a class="download-btn" href="@call.record" target="_blank">
                                    <img src="./icons/download.svg">
                                </a>
                            }
                            else
                            {
                                <div>---</div>
                            }

                        </td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
    <div class="section-field filter-pagination mt-20">
        <div class="ind-col-lg-6">
            Страница:
            <input class="pagination-input" type="number" min="1" @bind="current_page" @bind:event="oninput" @onkeydown="OnKeyDown">
            из @page_count.Count()
            <button class="score" @onclick="FindByFilter">Перейти</button>
        </div>
        <div class="ind-col-lg-4">
            <button class="score" @onclick="PagPrev">Предыдущая</button>
            <button class="score" @onclick="PagNext">Следующая</button>
        </div>
    </div>
</div>
@code {
    protected bool openSelectClient { get; set; } = false;
    protected string? contactNumber { get; set; }

    protected CallHistoryFilter callHistoryFilter = new();
    protected List<call_history>? call_Histories = new();
    protected List<user> SelectManagers = new();
    protected List<user>? noSelectManagers = new();
    protected bool view_filter_settings { get; set; }

    List<int> page_count = new List<int>();
    protected int count_on_page = 50;
    protected int current_page = 1;
    protected int user_id { get; set; }
    protected string manager_search = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user_id = authState.User.Claims.Where(_ => _.Type == ClaimTypes.NameIdentifier).Select(_ => Convert.ToInt32(_.Value)).First();
        callHistoryFilter = await Http.GetFromJsonAsync<CallHistoryFilter>($"api/Filter/GetCallHistoryFilter/{user_id}");
        callHistoryFilter.user_id = user_id;

        noSelectManagers = await Http.GetFromJsonAsync<List<user>>("api/User?type=managers");
        if (noSelectManagers != null)
        {
            List<user> removedManagers = new();
            foreach (var m in noSelectManagers)
            {
                if (callHistoryFilter.managers.Contains(m.id))
                {
                    removedManagers.Add(m);
                    SelectManagers.Add(m);
                }
            }
            foreach (var m in removedManagers)
                noSelectManagers.Remove(m);
        }
        await FindByFilter();
    }
    protected async Task FindByFilter()
    {
        callHistoryFilter.current_page = current_page;
        if (page_count.Count != 0 && (current_page < 1 || current_page > page_count.Count))
            return;
        callHistoryFilter.calls_on_page = count_on_page;

        callHistoryFilter.managers = new();
        foreach (var m in SelectManagers)
        {
            callHistoryFilter.managers.Add(m.id);
        }

        var response = await Http.PostAsJsonAsync("api/CallHistory", callHistoryFilter);
        var responseBody = await response.Content.ReadAsStringAsync();
        CallHistoryReturnData? callHistoryReturnData = JsonConvert.DeserializeObject<CallHistoryReturnData>(responseBody);
        call_Histories = callHistoryReturnData.call_historyes;

        int total_page = Convert.ToInt32(Math.Ceiling(callHistoryReturnData.count / Convert.ToDouble(count_on_page)));
        page_count = new();
        for (int i = 1; i <= total_page; i++)
            page_count.Add(i);
        await Http.PutAsJsonAsync("api/Filter/SaveCallHistoryFilter", callHistoryFilter);
        StateHasChanged();

    }
    protected async Task CloseFilterSettings()
    {
        view_filter_settings = false;
        await Http.PutAsJsonAsync("api/Filter/SaveCallHistoryFilter", callHistoryFilter);
    }
    protected async Task ClearFilter()
    {
        current_page = 1;
        callHistoryFilter.managers = new();
        callHistoryFilter.phone = null;
        callHistoryFilter.call_date_from = null;
        callHistoryFilter.call_date_to = null;
        callHistoryFilter.type = null;
        callHistoryFilter.user_id = user_id;
        await FindByFilter();
    }
    protected void OpenSelectClient(string num)
    {
        contactNumber = num;
        openSelectClient = true;
    }
    protected async Task Search()
    {
        current_page = 1;
        await FindByFilter();
    }
    protected async Task OnKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" || e.Code == "NumpadEnter")
        {
            await FindByFilter();
        }
    }
    private async Task SearchEnter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await Search();
        }

    }
    protected async Task PagPrev()
    {
        if (current_page > 1)
        {
            current_page--;
            await FindByFilter();
        }
    }
    protected async Task PagNext()
    {
        if (current_page < page_count.Count)
        {
            current_page++;
            await FindByFilter();
        }
    }
}
