@page "/producttosupplierorder/add/{supplierOrderId:int}"
@using industriation_crm.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<AuthorizeView Roles="6">
<div class="modal" tabindex="-1" style="display:block" role="dialog">
    <div class="modal-dialog modal-xl modal-dialog-scrollable ind-col-lg-7 ind-col-md-8">
        <div class="modal-content b-s">
            <div class="modal-header">
                <div class="container">
                    <div class="row-f ind-col-lg-10">
                        <div class="main-title ind-col-lg-3">Добавление товаров</div>
                        <div class="ind-col-lg-7 row-f">
                            <div class="ind-col-lg-1 a-i-c">
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть" @onclick="CloseModal"></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-body">


                @foreach (int id in noSupleirOrderProducts!.GroupBy(o => o!.order_check?.order_id).OrderBy(o => o!.Key).Select(o => o!.Key))
                {
                    <label class="form-label">Заказ №@id</label>
                    <div class="section-field">
                        <table class="order-table ind-col-lg-10">
                            <thead class="ind-col-lg-10">
                                <tr class="order-row ind-col-lg-10">
                                    <td class="ind-col-lg-2">Артикул</td>
                                    <td class="ind-col-lg-5">Наименование</td>
                                    <td class="ind-col-lg-1">Колличество</td>
                                    <td class="ind-col-lg-2"></td>
                                </tr>
                            </thead>
                            <tbody class="ind-col-lg-10">
                                    @foreach (var p in noSupleirOrderProducts.Where(o => o!.order_check?.order_id == id))
                                {
                                    if (productsInSuplierOrder.Where(pr => pr.id == p.id).FirstOrDefault() == null || p.is_delete_from_supplier_order == true)
                                    {
                                        <tr class="order-row">
                                            <td class="ind-col-lg-2">@p.product.id</td>
                                            <td class="ind-col-lg-5">@p.product.name</td>
                                            <td class="ind-col-lg-1">@p.count</td>
                                            <td class="ind-col-lg-2">
                                                <button class="add-item" @onclick="()=>AddProduct(p)">
                                                    Добавить
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
</AuthorizeView>
@code {
    [Parameter]
    public int supplierOrderId { get; set; }
    [Parameter]
    public Action CloseModal { get; set; }
    [Parameter]
    public List<product_to_order>? productsInSuplierOrder { get; set; }

    protected List<product_to_order>? noSupleirOrderProducts { get; set; } = new();



    protected override async Task OnInitializedAsync()
    {
        noSupleirOrderProducts = await Http.GetFromJsonAsync<List<product_to_order>>("api/ProductsToSupplierOrder");
    }
    protected override async Task OnParametersSetAsync()
    {
        noSupleirOrderProducts!.AddRange(productsInSuplierOrder!.Where(p => p.is_delete_from_supplier_order == true).ToList());

    }
    protected async Task AddProduct(product_to_order product_To_Order)
    {
        product_To_Order.supplier_price = product_To_Order._total_price;
        product_To_Order.supplier_delivery_period = product_To_Order.delivery_period;
        if (product_To_Order.supplier_order_id != 0 && product_To_Order.supplier_order_id != null)
            product_To_Order.is_delete_from_supplier_order = false;
        else
            productsInSuplierOrder!.Add(product_To_Order);
    }
}