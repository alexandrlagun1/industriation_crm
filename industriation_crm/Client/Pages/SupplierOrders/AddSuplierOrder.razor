@page "/supplierorder/add"
@page "/supplierorder/add/{order_guid}"
@page "/supplierorder/edit/{supplierOrderId:int}"
@using System.Security.Claims
@using industriation_crm.Server.DataTranslation
@using industriation_crm.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView Roles="6">
    @if (showAlert)
    {
        <Alert text="@alertText" CloseAlert="CloseAlert" type="@alertType"></Alert>
    }

    <div class="main-title">@Title заказ поставщику @supplierOrderId</div>
    <hr />

    @if (openProductModal)
    {
        <AddProductsToSupplierOrder CloseModal="CloseAddProductModal" productsInSuplierOrder="supplier_order.product_to_orders"></AddProductsToSupplierOrder>
    }
    @if (openSelectClient)
    {
        <industriation_crm.Client.Pages.Clients.ClientDetails SelectOrderClient="SelectClient"></industriation_crm.Client.Pages.Clients.ClientDetails>
    }
    else
    {
        
        <div class="main-section mb-20">
            <div class="main-section-label">Поставщик:</div>
            <button @onclick="()=>openSelectClient=true" class="score mb-20" type="button">
                Выбрать поставщика
            </button>
            <div class="row-f">
                <div class="ind-col-lg-4">
                    <div class="main-section ind-col-lg-10">
                        <div class="main-section-label">Поставщик</div>
                        <div class="section-field">
                            <div class="ind-col-lg-10 ind-col-md-10">
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">Имя</div>
                                    @main_contact?.name
                                </div>
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">Фамилия</div>
                                    @main_contact?.surname
                                </div>
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">Отчество</div>
                                    @main_contact?.patronymic
                                </div>
                            </div>
                            <div class="ind-col-lg-10 ind-col-md-10">
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">E-mail</div>
                                    @main_contact?.email
                                </div>
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">Телефон</div>
                                    @main_contact?.phone
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (supplier_order.supplier?.client_type == 1)
                    {
                        <div class="main-section ind-col-lg-10">
                            <div class="main-section-label">Данные по юридическому лицу</div>
                            <div class="section-field">
                                <div class="ind-col-lg-10 ind-col-md-10">
                                    <div class="ind-col-lg-10 input-field">
                                        <div class="input-label">Полное наименование</div>
                                        @supplier_order.supplier?.org_name
                                    </div>
                                    <div class="ind-col-lg-10 input-field">
                                        <div class="input-label">Адрес регистрации</div>
                                        @supplier_order.supplier?.org_address
                                    </div>
                                </div>
                                <div class="ind-col-lg-10 ind-col-md-10">
                                    <div class="ind-col-lg-10 input-field">
                                        <div class="input-label">ИНН</div>
                                        @supplier_order.supplier?.org_inn

                                    </div>
                                    <div class="ind-col-lg-10 input-field">
                                        <div class="input-label">ОГРН</div>
                                        @supplier_order.supplier?.org_ogrn
                                    </div>
                                </div>
                                <div class="ind-col-lg-10 ind-col-md-10">
                                    <div class="ind-col-lg-10 input-field">
                                        <div class="input-label">КПП</div>
                                        @supplier_order.supplier?.org_kpp
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                    <div class="main-section ind-col-lg-10">
                        <div class="main-section-label">Банковские реквизиты</div>
                        <div class="section-field">
                            <div class="ind-col-lg-10 ind-col-md-10">
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">БИК</div>
                                    @supplier_order.supplier?.bank_bik
                                </div>
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">Наименование банка</div>
                                    @supplier_order.supplier?.bank_name
                                </div>
                            </div>
                            <div class="ind-col-lg-10 ind-col-md-10">
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">Корреспондентский счет</div>
                                    @supplier_order.supplier?.bank_cor_schet
                                </div>
                                <div class="ind-col-lg-10 input-field">
                                    <div class="input-label">Расчетный счет</div>
                                    @supplier_order.supplier?.bank_ras_schet
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <hr>
            <label for="Name" class="form-label">
                Товары заказов
                <button @onclick="()=>openProductModal=true" class="score" type="button">
                    Добавить
                </button>
            </label>
        </div>
        <div class="">
            @foreach (int? id in supplier_order?.product_to_orders?.Where(p => p.is_delete_from_supplier_order == false).GroupBy(p => p.order_check.order_id)?.OrderBy(o => o.Key)?.Select(p => p.Key)!)
            {
                <div class="main-section mb-20">
                    <div class="main-section-label">Заказ №@id</div>
                    <label class="form-label mb-20">
                        @if (supplier_order?.product_to_orders?.Where(p => p.order_check.order_id == id).FirstOrDefault()?.order_check.order?.order_status_id == 4)
                        {
                            <b>На пересогласовании</b>
                        }
                        else if (supplier_order?.product_to_orders?.Where(p => p.order_check.order_id == id).FirstOrDefault()?.order_check.order?.order_status_id == 7)
                        {
                            <b>Отменен</b>
                        }
                        else if (supplier_order?.product_to_orders?.Where(p => p.order_check.order_id == id).FirstOrDefault()?.order_check.order?.order_status_id == 8)
                        {
                            <b>Возврат</b>
                        }
                        else
                        {
                            <a href='/order/edit/@id' class="score" role="button">
                                Управление заказом
                            </a>
                        }
                    </label>

                    <div class="section-field mb-20">
                        <table class="order-table ind-col-lg-10">
                            <thead class="ind-col-lg-10">
                                <tr class="order-row ind-col-lg-10">
                                    <td class="ind-col-lg-1">Артикул</td>
                                    <td class="ind-col-lg-4">Наименование</td>
                                    <td class="ind-col-lg-1">Количество</td>
                                    <td class="ind-col-lg-2">Срок поставки</td>
                                    <td class="ind-col-lg-2">Стоимость</td>
                                    
                                </tr>
                            </thead>
                            <tbody class="ind-col-lg-10">
                                @foreach (var p in supplier_order?.product_to_orders?.Where(p => p.order_check.order_id == id && p.is_delete_from_supplier_order! == false))
                                {
                                    <tr class="order-row">
                                        <td class="ind-col-lg-1">@p.product.id</td>
                                        <td class="ind-col-lg-4">@p.product.name</td>
                                        <td class="ind-col-lg-1">
                                            @p.count
                                        </td>
                                        <td class="ind-col-lg-2">
                                            <table class="table-inside">
                                                <tr class="tr-inside">
                                                    <td>
                                                        Срок доставки: @p.from_delivery_period
                                                        @switch (p.delivery_period_type_id)
                                                        {
                                                            case 1:
                                                                <div> дней</div>
                                                                break;
                                                            case 2:
                                                                <div> недели</div>
                                                                break;
                                                            case 3:
                                                                <div> месяца</div>
                                                                break;
                                                        }
                                                    </td>
                                                </tr>
                                                -------
                                                <tr class="tr-inside">
                                                    <td>
                                                        <div class="ind-col-lg-10 flex">
                                                            <input type="number" class="table-input del-input" @bind="p!.supplier_delivery_period">
                                                            <select name="" id="" class="table-input" @bind="p.delivery_period_type_id">
                                                                @foreach (var delivery_period_type in delivery_Period_Types!)
                                                                {
                                                                    <option value="@delivery_period_type.id">@delivery_period_type.name</option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </table>
                                        </td>
                                        <td class="ind-col-lg-2">
                                            <table class="table-inside">
                                                <tr class="tr-inside">
                                                    <td>
                                                        Цена: @p._product_price_with_discount
                                                    </td>
                                                </tr>
                                                <tr class="tr-inside">
                                                    <td>
                                                        Стоимость: @p?._total_price
                                                    </td>
                                                </tr>
                                                -------
                                                <tr class="tr-inside">
                                                    <input type="number" step="0.1" class="main-input" @bind-value="@p.supplier_price">
                                                </tr>
                                            </table>
                                        </td>
                                        
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="section-field ind-col-lg-10">
                        <div class="ind-col-lg-10">
                            <div class="ind-col-lg-10 row-f">
                                <div class="ind-col-lg-7"></div>
                                <div class="ind-col-lg-3 row-f">
                                    <div class="ind-col-lg-7" style="text-align: right;">
                                        Сумма:
                                    </div>
                                    <div class="ind-col-lg-3" style="text-align: right;">
                                        @supplier_order?._delivery_products_total_price
                                    </div>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>

            }
        </div>


        <div class="form-group">
            <button type="submit" class="score" @onclick="SaveOrder">Сохранить</button>
            <button type="button" class="close" @onclick="Cancel">Закрыть</button>
            @if (supplierOrderId != 0 && supplier_order.status_id != 2)
            {
                <button type="button" class="save" @onclick="SendTo1C">Сформировать заказ</button>
            }
        </div>
    }
</AuthorizeView>
@code {
    protected bool showAlert { get; set; }
    protected string alertText { get; set; }
    protected int alertType { get; set; }
    protected void CloseAlert()
    {
        showAlert = false;
        StateHasChanged();
    }

    [Parameter]
    public string? order_guid { get; set; }
    [Parameter]
    public int supplierOrderId { get; set; }

    protected bool openSelectClient = false;
    protected bool openProductModal = false;
    protected contact? main_contact { get; set; }

    protected string Title = "Добавить";
    protected supplier_order supplier_order = new();

    protected List<delivery_period_type>? delivery_Period_Types = new();
    protected List<user>? users = new();
    protected int? user_id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user_id = authState.User.Claims.Where(_ => _.Type == ClaimTypes.NameIdentifier).Select(_ => Convert.ToInt32(_.Value)).First();
        users = await Http.GetFromJsonAsync<List<user>>("api/User?type=suppliers");
        delivery_Period_Types = await Http.GetFromJsonAsync<List<delivery_period_type>>("api/DeliveryPeriodType");
        if (supplierOrderId == 0)
            supplier_order.user_id = users[0].id;

    }
    protected override async Task OnParametersSetAsync()
    {

        if (supplierOrderId != 0)
        {
            Title = "Изменить";
            supplier_order = await Http.GetFromJsonAsync<supplier_order>("api/SupplierOrder/" + supplierOrderId);
            if (supplier_order.user_id == 0)
                supplier_order.user_id = users[0].id;
        }
        if (order_guid != null)
        {
            supplier_order.product_to_orders.AddRange(order_translation.orders_data.Where(c => c.Key == Guid.Parse(order_guid)).FirstOrDefault().Value._pay_check.product_To_Orders.Where(p => p.is_add_to_supplier_order == true).ToList());
            foreach (var p in supplier_order.product_to_orders)
            {
                p.supplier_delivery_period = p.from_delivery_period;
                p.supplier_price = p._total_price;
                
            }
            order_translation.orders_data.Remove(Guid.Parse(order_guid));
        }
        main_contact = supplier_order.supplier?.contacts?.Where(c => c.main_contact == 1).FirstOrDefault();
    }
    protected void SelectClient(client _client)
    {
        openSelectClient = false;
        supplier_order.supplier_id = _client.id;
        supplier_order.supplier = _client;
        StateHasChanged();

    }
    protected async Task RemoveProductFromSup(product_to_order product_To_Order)
    {
        product_To_Order.is_delete_from_supplier_order = true;

    }
    protected async Task SendTo1C()
    {
        if (supplier_order.supplier?.id == 0)
        {
            alertText = "Выберите поставщика!";
            alertType = 1;
            showAlert = true;
            return;
        }
        if (supplier_order?.product_to_orders?.Where(o => o.order_check.order?.order_status_id == 4).FirstOrDefault() != null)
        {
            alertText = "Заказ клиента на пересогласовании!";
            alertType = 1;
            showAlert = true;
            return;
        }
        if (supplier_order?.product_to_orders?.Where(o => o.order_check.order?.order_status_id == 7).FirstOrDefault() != null)
        {
            alertText = "Заказ клиента отменен!";
            alertType = 1;
            showAlert = true;
            return;
        }
        if (supplier_order?.product_to_orders?.Where(o => o.order_check.order?.order_status_id == 8).FirstOrDefault() != null)
        {
            alertText = "Заказ клиента в статусе Возврат!";
            alertType = 1;
            showAlert = true;
            return;
        }
        alertText = "Заказ отправлен в 1С";
        alertType = 0;
        showAlert = true;

        supplier_order?.product_to_orders?.ForEach(p => p.order_check.order = null);
        supplier_order.status_id = 2;
        await Http.PutAsJsonAsync("api/SupplierOrder", supplier_order);
        await Http.PostAsJsonAsync("api/_1C/CreateSupplierOrder", supplier_order);



        foreach (int? id in supplier_order?.product_to_orders?.Where(p => /*p.order_id != null &&*/ p.is_delete_from_supplier_order == false).GroupBy(p => p.order_check.order_id)?.OrderBy(o => o.Key)?.Select(p => p.Key)!)
        {
            order? order = await Http.GetFromJsonAsync<order>("api/order/" + id);
            if (order._current_check.product_To_Orders.Where(p => p.supplier_order_id == null).FirstOrDefault() == null)
            {
                order.order_status_id = 6;
            }
            else
            {
                order.order_status_id = 5;
            }
            await Http.PutAsJsonAsync("api/Order", order);
        }


    }
    protected async Task SaveOrder()
    {
        List<int?> ids = new();
        ids.AddRange(supplier_order?.product_to_orders?.Where(p => p.order_check.order_id != null && p.is_delete_from_supplier_order == false).GroupBy(p => p.order_check.order_id)?.OrderBy(o => o.Key)?.Select(p => p.Key)!);
        foreach (int? id in ids)
        {
            order? order = await Http.GetFromJsonAsync<order>("api/order/" + id);
            if (order.supplier_manager_id == null)
            {
                order.supplier_manager_id = supplier_order.user_id;
                await Http.PutAsJsonAsync("api/Order", order);
            }
        }
        foreach (int? id in supplier_order?.product_to_orders?.Where(p => p.is_delete_from_supplier_order == true).GroupBy(p => p.order_check.order_id)?.OrderBy(o => o.Key)?.Select(p => p.Key)!)
        {
            if (supplier_order?.product_to_orders?.Where(p => p.is_delete_from_supplier_order == false).Select(p => p.order_check.order_id).ToList().Contains(id) == false)
            {
                order? order = await Http.GetFromJsonAsync<order>("api/order/" + id);
                order.supplier_manager_id = null;
                await Http.PutAsJsonAsync("api/Order", order);
            }
        }
        supplier_order?.product_to_orders?.ForEach(p => p.order_check = null);
        if (supplier_order.id != 0)
        {
            
            await Http.PutAsJsonAsync("api/SupplierOrder", supplier_order);
        }
        else
        {
            supplier_order.user_id = user_id;
            supplier_order.status_id = 1;
            supplier_order.product_to_orders.ForEach(p => p.order_check = null);
            var response = await Http.PostAsJsonAsync("api/SupplierOrder", supplier_order);
            supplierOrderId = await response.Content.ReadFromJsonAsync<int>();
            order_guid = null;
        }
        await OnParametersSetAsync();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchsupplierordersdetails");
    }
    protected void CloseAddProductModal()
    {
        openProductModal = false;
        StateHasChanged();
    }
}