@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorageService
@inject HttpClient Http

<AuthorizeView>
    <Authorized>
        <a href="" class="auth-link">@context.User.Identity?.Name</a>
        <button type="button" @onclick="Logout" class="nav-link btn btn-link">Выйти</button>
    </Authorized>
    <NotAuthorized>
        <a href="/login" class="auth-link">Войти</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task Logout()
    {
        var response = await Http.GetAsync("api/Auth");
        if (response.IsSuccessStatusCode == true)
        {
            (_authStateProvider as CustomAuthStateProvider).ClearAuthInfo();
            await _localStorageService.RemoveItemAsync("isauthenticated");
            _navigationManager.NavigateTo("/", true);
        }

    }
}